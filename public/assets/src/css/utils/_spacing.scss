// Define Different Sizes
$sizes: (
    ('none', 0), 
    ('1', 0.25),
    ('2', 0.5),
    ('3', 0.75),
    ('4', 1),
    ('5', 1.25),
    ('6', 1.5),
    ('7', 2),
    ('8', 2.5),
    ('9', 3),
    ('10', 4),
    ('11', 4.5),
    ('12', 5),
);

// Define Margin and Padding Keys
$marginKey: 'has-margin';
$paddingKey: 'has-padding';
$separator: '-';

// Define Positions
$positions: ('top', 'left', 'bottom', 'right');

// Define Unit Size
$sizeUnit: rem;

// Get The Size Value And Return 0 if none
@function getSizeValue($key, $value) {
    @if($key == 'none') {
        @return 0;
    } @else {
        @return $value + $sizeUnit;
    }
}

@each $size in $sizes {
    // Get Size Key And Value
    $sizeKey: nth($size, 1);
    $sizeValue: nth($size, 2);

    // Generate Proper Margin helpers By Different Sizes
    .#{$marginKey}#{$separator}#{$sizeKey} {
        margin: getSizeValue($sizeKey, $sizeValue);
    }

    // Generate Proper Padding helpers By Different Sizes
    .#{$paddingKey}#{$separator}#{$sizeKey} {
        padding: getSizeValue($sizeKey, $sizeValue);
    }


    @each $position in $positions {
        // Generate Proper Margin helpers By Different Sizes And Positions 
        .#{$marginKey}#{$separator}#{$position}#{$separator}#{$sizeKey} {
            margin-#{$position}: getSizeValue($sizeKey, $sizeValue);
        }

        // Generate Proper Padding helpers By Different Sizes And Positions
        .#{$paddingKey}#{$separator}#{$position}#{$separator}#{$sizeKey} {
            padding-#{$position}: getSizeValue($sizeKey, $sizeValue);
        }

    }
}